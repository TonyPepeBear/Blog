{"componentChunkName":"component---src-templates-article-template-tsx","path":"/posts/github/github-actions-prettier","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"56c03060-dd39-55f0-84b4-0eec1af77639","html":"<p>我的專案只要有關 js 的，我都會用 prettier 來自動排版，因為 prettier 能確保大家的程式碼風格一致。但是，我常常會有忘記 prettier 一下就直接 push 到 GitHub 上，我就想到說如果 GitHub Actions 可以幫忙檢查 prettier 應該也可以就直接幫忙 prettier 後 push 上來吧。今天我就把我寫好的 GitHub Actions 腳本記錄一下。</p>\n<!--more-->\n<h2>思路</h2>\n<p>我把他分為兩個 job 來做：</p>\n<ol>\n<li>執行 prettier check</li>\n<li>如果步驟 1 失敗，執行 prettier write 並 push</li>\n</ol>\n<p>完整的 yml 檔我放在最後面了，有需要的人可以直接拿去用。</p>\n<h2>Prettier Check</h2>\n<p>執行 prettier check 應該是很簡單的步驟，許多 GitHub 上的開源專案應該都寫的差不多。簡單來說，就是設定好 node 後，直接 run <code class=\"language-text\">npx prettier --check .</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">prettier-check</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Node\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"14\"</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Run Prettier Check\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          npx prettier --check .</span></code></pre></div>\n<h2>Prettier Write</h2>\n<p>這步驟比較會遇到問題的部分就是要如何判斷上一步驟 prettier check 執行失敗，我翻了一下 GitHub Actions 的文件，發現可以用 if 來決定一個 job 要不要執行，所以我們會需要 prettier check 的執行結果，才決定要不要 prettie write。Actions 有一個 <code class=\"language-text\">needs</code> 的邏輯，可以用來等待另一個 job 完成，然後使用他的執行結果。所以目前為止，可以先寫成下面這樣：</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">prettier-write</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">needs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> prettier<span class=\"token punctuation\">-</span>check\n    <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span> always() <span class=\"token important\">&amp;&amp;</span> (needs.prettier<span class=\"token punctuation\">-</span>check.result == 'failure')</code></pre></div>\n<p>接下來來寫 prettier write 和 git push，我在這邊遇到的問題是，如果 git checkout 的時候沒有給 Token，GitHub 預設會讓由 Actions push 的 Commit 不會觸發任的 Actions，這也不難理解，怕 Actions 彼此呼相 Call，然後進到無限回圈停不下來。但我今天還是希望他 prettier 完後可以觸發 Build 的 Actions，所以我們就要在 git checkout 的時候給他自訂的 Token，這樣等等在 push 的時候，也會幫我們用這個 Token Push。</p>\n<p>就不在另外上程式碼，直接去下方看完整邏輯吧。</p>\n<h2>完整的 GitHub Actions 檔</h2>\n<p>結合上面兩個步驟：</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> prettier\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">prettier-check</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.MY_GITHUB_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Node\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"14\"</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Run Prettier Check\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          npx prettier --check .</span>\n  <span class=\"token key atrule\">prettier-write</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">needs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> prettier<span class=\"token punctuation\">-</span>check\n    <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span> always() <span class=\"token important\">&amp;&amp;</span> (needs.prettier<span class=\"token punctuation\">-</span>check.result == 'failure')\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.MY_GITHUB_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Node\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"14\"</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Write Prettier\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          npx prettier --write .</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Commit and Push\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> EndBug/add<span class=\"token punctuation\">-</span>and<span class=\"token punctuation\">-</span>commit@v9\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">add</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\".\"</span>\n          <span class=\"token key atrule\">message</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Prettier\"</span>\n          <span class=\"token key atrule\">committer_name</span><span class=\"token punctuation\">:</span> TonyPepeBear\n          <span class=\"token key atrule\">committer_email</span><span class=\"token punctuation\">:</span> tonybear55665566@gmail.com</code></pre></div>\n<h2>Reference</h2>\n<ul>\n<li><a href=\"https://docs.github.com/en/actions\">GitHub Actions</a></li>\n</ul>","rawMarkdownBody":"\n我的專案只要有關 js 的，我都會用 prettier 來自動排版，因為 prettier 能確保大家的程式碼風格一致。但是，我常常會有忘記 prettier 一下就直接 push 到 GitHub 上，我就想到說如果 GitHub Actions 可以幫忙檢查 prettier 應該也可以就直接幫忙 prettier 後 push 上來吧。今天我就把我寫好的 GitHub Actions 腳本記錄一下。\n\n<!--more-->\n\n## 思路\n\n我把他分為兩個 job 來做：\n\n1. 執行 prettier check\n2. 如果步驟 1 失敗，執行 prettier write 並 push\n\n完整的 yml 檔我放在最後面了，有需要的人可以直接拿去用。\n\n## Prettier Check\n\n執行 prettier check 應該是很簡單的步驟，許多 GitHub 上的開源專案應該都寫的差不多。簡單來說，就是設定好 node 後，直接 run `npx prettier --check .`：\n\n```yml\njobs:\n  prettier-check:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n\n      - name: Setup Node\n        uses: actions/setup-node@v2\n        with:\n          node-version: \"14\"\n\n      - name: Run Prettier Check\n        run: |\n          npx prettier --check .\n```\n\n## Prettier Write\n\n這步驟比較會遇到問題的部分就是要如何判斷上一步驟 prettier check 執行失敗，我翻了一下 GitHub Actions 的文件，發現可以用 if 來決定一個 job 要不要執行，所以我們會需要 prettier check 的執行結果，才決定要不要 prettie write。Actions 有一個 `needs` 的邏輯，可以用來等待另一個 job 完成，然後使用他的執行結果。所以目前為止，可以先寫成下面這樣：\n\n```yml\njobs:\n  prettier-write:\n    runs-on: ubuntu-latest\n    needs:\n      - prettier-check\n    if: always() && (needs.prettier-check.result == 'failure')\n```\n\n接下來來寫 prettier write 和 git push，我在這邊遇到的問題是，如果 git checkout 的時候沒有給 Token，GitHub 預設會讓由 Actions push 的 Commit 不會觸發任的 Actions，這也不難理解，怕 Actions 彼此呼相 Call，然後進到無限回圈停不下來。但我今天還是希望他 prettier 完後可以觸發 Build 的 Actions，所以我們就要在 git checkout 的時候給他自訂的 Token，這樣等等在 push 的時候，也會幫我們用這個 Token Push。\n\n就不在另外上程式碼，直接去下方看完整邏輯吧。\n\n## 完整的 GitHub Actions 檔\n\n結合上面兩個步驟：\n\n```yml\nname: prettier\n\non:\n  push:\n\njobs:\n  prettier-check:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          token: ${{ secrets.MY_GITHUB_TOKEN }}\n\n      - name: Setup Node\n        uses: actions/setup-node@v2\n        with:\n          node-version: \"14\"\n\n      - name: Run Prettier Check\n        run: |\n          npx prettier --check .\n  prettier-write:\n    runs-on: ubuntu-latest\n    needs:\n      - prettier-check\n    if: always() && (needs.prettier-check.result == 'failure')\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          token: ${{ secrets.MY_GITHUB_TOKEN }}\n\n      - name: Setup Node\n        uses: actions/setup-node@v2\n        with:\n          node-version: \"14\"\n\n      - name: Write Prettier\n        run: |\n          npx prettier --write .\n      - name: Commit and Push\n        uses: EndBug/add-and-commit@v9\n        with:\n          add: \".\"\n          message: \"Prettier\"\n          committer_name: TonyPepeBear\n          committer_email: tonybear55665566@gmail.com\n```\n\n## Reference\n\n- [GitHub Actions](https://docs.github.com/en/actions)\n","excerpt":"我的專案只要有關 js 的，我都會用 prettier 來自動排版，因為 prettier 能確保大家的程式碼風格一致。但是，我常常會有忘記 prettier 一下就直接 push 到 GitHub 上，我就想到說如果 GitHub Actions 可以幫忙檢查 prettier 應該也可以就直接幫忙 prettier 後 push 上來吧。今天我就把我寫好的 GitHub Actions 腳本…","frontmatter":{"title":"讓 GitHub Actions 來幫你 Prettier","date":"2022-10-04T13:44:50.631Z","draft":false,"tags":["prettier","github","github-actions"],"image":"https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/b33c3519-4782-4519-e113-3aadf3bf8800/public","description":null}}}]}},"pageContext":{"id":"56c03060-dd39-55f0-84b4-0eec1af77639"}},"staticQueryHashes":[]}