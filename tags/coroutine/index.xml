<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>coroutine on TonyPepe</title><link>https://tonypepebear.github.io/HugoBlog/tags/coroutine/</link><description>Recent content in coroutine on TonyPepe</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 19 Sep 2021 07:26:56 +0000</lastBuildDate><atom:link href="https://tonypepebear.github.io/HugoBlog/tags/coroutine/index.xml" rel="self" type="application/rss+xml"/><item><title>Kotlin Coroutine</title><link>https://tonypepebear.github.io/HugoBlog/posts/kotlin/kotlin-coroutine/</link><pubDate>Sun, 19 Sep 2021 07:26:56 +0000</pubDate><guid>https://tonypepebear.github.io/HugoBlog/posts/kotlin/kotlin-coroutine/</guid><description>&lt;p>Kotlin 在非同步處理上有新的方法，協程 &lt;code>Coroutine&lt;/code>。&lt;code>Coroutine&lt;/code> 不會像 &lt;code>Thread&lt;/code> 會耗費大量的資源，能在原本的&lt;code>線程&lt;/code>上創建極為輕量的&lt;code>協程&lt;/code>，且較不會發生記憶體洩漏的情況。&lt;/p></description></item></channel></rss>