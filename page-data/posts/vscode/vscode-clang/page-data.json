{"componentChunkName":"component---src-templates-article-template-tsx","path":"/posts/vscode/vscode-clang","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"452d39ba-0e74-5399-a486-613e25c014ac","html":"<p>其實在 VSCode 寫 C 根本不是一件難事，VSCode 本來就是一個優秀的文字編輯器，所以要要寫 C 完全不是問題，但問題是出在執行或 Debug 寫好的 Code 實在是很麻煩，要先經過不少設定。而且在官方的文件中，其實是教你怎麼建置專案，執行 Debug，如果只是寫一點簡單的小程式根本用不到那麼複雜的設定，所以本文是我目前發現比較容易在 VSCode 中執行 C 和 C++ 的方法。</p>\n<!--more-->\n<h2>gcc g++</h2>\n<p>在了解如何設定 vscode 前，我們先來了解一下基本的 gcc、g++ 指令，這是一個用來編譯 C 程式碼最快的方法，gcc 就是 C 的編譯器，g++ 則是 C++ 的。這裡不會解說如何安裝，在 Windows 下可以使用 MinGW，macOS 則是只要在 Terminal 下 gcc 指令，就會自動問你要不要安裝。</p>\n<p>下面的範例會編譯 <code class=\"language-text\">main.cpp</code> 的 C++ 檔案：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">g++ main.cpp</code></pre></div>\n<p>執行上面的指令後，會產生名為 <code class=\"language-text\">a.out</code> 的檔案，因為我們沒有指定輸出檔名，所以預設就是 <code class=\"language-text\">a.out</code>，在 Windows 上則為 <code class=\"language-text\">a.exe</code> 的執行檔。如果要執行產生的執行檔案：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">./a.out\n./a.exe <span class=\"token comment\"># On Windows</span></code></pre></div>\n<p>要指定輸出檔名也很簡單，加個 <code class=\"language-text\">-o</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">g++ -o main.out main.cpp</code></pre></div>\n<p>這樣就可以將 <code class=\"language-text\">main.cpp</code> 編譯成 <code class=\"language-text\">main.out</code> 的執行檔。</p>\n<p>上面這些不會也沒關係，但我還是建議了解一下，因為等一下要安裝的模組，只是幫你完成這些步驟，如果完全不了解指令的功能，發生問題可能自己會沒辦法解決。</p>\n<h2>設定 VSCode</h2>\n<p>第一步就是先在 VSCode 中安裝 <strong>C/C++</strong>，和 <strong>Code Runner</strong>，兩個延伸模組。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/TonyPepeBear/ImageBed@main/20210608014749.png\" alt=\"img\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/TonyPepeBear/ImageBed@main/20210608021309.png\" alt=\"img\"></p>\n<p>安裝完成後，應該就會看到右上角出現了一個執行的按鈕，可以按按看程式會不會執行。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/TonyPepeBear/ImageBed@main/20210608021808.png\" alt=\"img\"></p>\n<p>如果找不到按鈕，或是想要停下程式，也可以用按下 <code class=\"language-text\">f1</code> 的方式叫出 VSCode 的指令輸入窗，輸入 <code class=\"language-text\">Run Code</code> 或是 <code class=\"language-text\">Stop Code Run</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/TonyPepeBear/ImageBed@main/20210608022037.png\" alt=\"img\"></p>\n<h2>Run In Terminal</h2>\n<p>現在可能會發先一個問題，這種執行模式是沒有辦法接收鍵盤輸入的，如果想要接收鍵盤輸入，我們要把執行模式改成在 Terminal 中。所以我們要開啟 VSCode 的 <code class=\"language-text\">settings.json</code> 設定檔，來更改設定，一樣是用 <code class=\"language-text\">f1</code> 叫出命令輸入區，並尋找 <code class=\"language-text\">open settings json</code>：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/TonyPepeBear/ImageBed@main/20210608024052.png\" alt=\"img\"></p>\n<p>打開後在裡面新增一行：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"code-runner.runInTerminal\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></code></pre></div>\n<p>如果前方有其他設定值，記得在前面的設定值的最後面加個逗號 <code class=\"language-text\">,</code>：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/TonyPepeBear/ImageBed@main/20210608024259.png\" alt=\"img\"></p>\n<p>現在就可以方便的在 VSCode 中寫 C，和方便的執行他們。</p>","rawMarkdownBody":"\n其實在 VSCode 寫 C 根本不是一件難事，VSCode 本來就是一個優秀的文字編輯器，所以要要寫 C 完全不是問題，但問題是出在執行或 Debug 寫好的 Code 實在是很麻煩，要先經過不少設定。而且在官方的文件中，其實是教你怎麼建置專案，執行 Debug，如果只是寫一點簡單的小程式根本用不到那麼複雜的設定，所以本文是我目前發現比較容易在 VSCode 中執行 C 和 C++ 的方法。\n\n<!--more-->\n\n## gcc g++\n\n在了解如何設定 vscode 前，我們先來了解一下基本的 gcc、g++ 指令，這是一個用來編譯 C 程式碼最快的方法，gcc 就是 C 的編譯器，g++ 則是 C++ 的。這裡不會解說如何安裝，在 Windows 下可以使用 MinGW，macOS 則是只要在 Terminal 下 gcc 指令，就會自動問你要不要安裝。\n\n下面的範例會編譯 `main.cpp` 的 C++ 檔案：\n\n```bash\ng++ main.cpp\n```\n\n執行上面的指令後，會產生名為 `a.out` 的檔案，因為我們沒有指定輸出檔名，所以預設就是 `a.out`，在 Windows 上則為 `a.exe` 的執行檔。如果要執行產生的執行檔案：\n\n```bash\n./a.out\n./a.exe # On Windows\n```\n\n要指定輸出檔名也很簡單，加個 `-o`：\n\n```bash\ng++ -o main.out main.cpp\n```\n\n這樣就可以將 `main.cpp` 編譯成 `main.out` 的執行檔。\n\n上面這些不會也沒關係，但我還是建議了解一下，因為等一下要安裝的模組，只是幫你完成這些步驟，如果完全不了解指令的功能，發生問題可能自己會沒辦法解決。\n\n## 設定 VSCode\n\n第一步就是先在 VSCode 中安裝 **C/C++**，和 **Code Runner**，兩個延伸模組。\n\n![img](https://cdn.jsdelivr.net/gh/TonyPepeBear/ImageBed@main/20210608014749.png)\n\n![img](https://cdn.jsdelivr.net/gh/TonyPepeBear/ImageBed@main/20210608021309.png)\n\n安裝完成後，應該就會看到右上角出現了一個執行的按鈕，可以按按看程式會不會執行。\n\n![img](https://cdn.jsdelivr.net/gh/TonyPepeBear/ImageBed@main/20210608021808.png)\n\n如果找不到按鈕，或是想要停下程式，也可以用按下 `f1` 的方式叫出 VSCode 的指令輸入窗，輸入 `Run Code` 或是 `Stop Code Run`。\n\n![img](https://cdn.jsdelivr.net/gh/TonyPepeBear/ImageBed@main/20210608022037.png)\n\n## Run In Terminal\n\n現在可能會發先一個問題，這種執行模式是沒有辦法接收鍵盤輸入的，如果想要接收鍵盤輸入，我們要把執行模式改成在 Terminal 中。所以我們要開啟 VSCode 的 `settings.json` 設定檔，來更改設定，一樣是用 `f1` 叫出命令輸入區，並尋找 `open settings json`：\n\n![img](https://cdn.jsdelivr.net/gh/TonyPepeBear/ImageBed@main/20210608024052.png)\n\n打開後在裡面新增一行：\n\n```json\n\"code-runner.runInTerminal\": true\n```\n\n如果前方有其他設定值，記得在前面的設定值的最後面加個逗號 `,`：\n\n![img](https://cdn.jsdelivr.net/gh/TonyPepeBear/ImageBed@main/20210608024259.png)\n\n現在就可以方便的在 VSCode 中寫 C，和方便的執行他們。\n","excerpt":"其實在 VSCode 寫 C 根本不是一件難事，VSCode 本來就是一個優秀的文字編輯器，所以要要寫 C 完全不是問題，但問題是出在執行或 Debug 寫好的 Code 實在是很麻煩，要先經過不少設定。而且在官方的文件中，其實是教你怎麼建置專案，執行 Debug，如果只是寫一點簡單的小程式根本用不到那麼複雜的設定，所以本文是我目前發現比較容易在 VSCode 中執行 C 和 C++ 的方法。 …","frontmatter":{"title":"用 VSCode 寫 C/C++","date":"2021-06-07T16:55:19.000Z","draft":false,"tags":["vscode","code","c","c++"],"image":"https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/48d8b9f1-209f-44ab-0f7b-92b5f082a500/public","description":"其實在 VSCode 寫 C 根本不是一件難事，VSCode 本來就是一個優秀的文字編輯器，所以要要寫 C 完全不是問題，但問題是出在執行或 Debug 寫好的 Code 實在是很麻煩。"}}}]}},"pageContext":{"id":"452d39ba-0e74-5399-a486-613e25c014ac"}},"staticQueryHashes":[]}