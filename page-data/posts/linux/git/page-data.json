{"componentChunkName":"component---src-templates-article-template-tsx","path":"/posts/linux/git","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"ffcb87cf-580e-5b8c-8531-c6678e682abe","html":"<p>Git 是一個強大的版本控制系統，也是目前最主流的版控系統。Git 是 Linux 開發者為了維護 Linux 的原始碼而開發的，Git 已經是現在程式設計師不可或缺的技能。</p>\n<!--more-->\n<h2>為什麼需要 Git</h2>\n<p>版本控制最簡單的辦法就是，每次都備份成一個資料夾：</p>\n<div class=\"gatsby-highlight\" data-language=\"txt\"><pre class=\"language-txt\"><code class=\"language-txt\">Project.2021.06.01\nProject.2021.06.02\nProject.2021.06.03\nProject.2021.06.04\nProject.2021.06.05</code></pre></div>\n<p>上面的方法是最簡單也是最智障的辦法，聽說到現在還是很多人在這樣管理程式碼。這樣管理程式碼的好處是簡單易用，而且不需要腦子，也不需要安裝任何東西，所以人都學得會。壞處是版本會很雜亂，每次只要檔案有變動，都需要備份一整個專案，沒辦法只記錄更動的部分，會浪費很多的硬碟空間。</p>\n<p>Git 就是用來解決上面的好辦法所會遇到的問題，Git 每次都只會記錄檔案變動的部分，每次檔案變動的地方也都會清楚。Git 最厲害的地方是在多人協作時，可以產生多個分支，分支在合併時若發生檔案衝突，也可以方便的處理。</p>","rawMarkdownBody":"\nGit 是一個強大的版本控制系統，也是目前最主流的版控系統。Git 是 Linux 開發者為了維護 Linux 的原始碼而開發的，Git 已經是現在程式設計師不可或缺的技能。\n\n<!--more-->\n\n## 為什麼需要 Git\n\n版本控制最簡單的辦法就是，每次都備份成一個資料夾：\n\n```txt\nProject.2021.06.01\nProject.2021.06.02\nProject.2021.06.03\nProject.2021.06.04\nProject.2021.06.05\n```\n\n上面的方法是最簡單也是最智障的辦法，聽說到現在還是很多人在這樣管理程式碼。這樣管理程式碼的好處是簡單易用，而且不需要腦子，也不需要安裝任何東西，所以人都學得會。壞處是版本會很雜亂，每次只要檔案有變動，都需要備份一整個專案，沒辦法只記錄更動的部分，會浪費很多的硬碟空間。\n\nGit 就是用來解決上面的好辦法所會遇到的問題，Git 每次都只會記錄檔案變動的部分，每次檔案變動的地方也都會清楚。Git 最厲害的地方是在多人協作時，可以產生多個分支，分支在合併時若發生檔案衝突，也可以方便的處理。\n","excerpt":"Git 是一個強大的版本控制系統，也是目前最主流的版控系統。Git 是 Linux 開發者為了維護 Linux 的原始碼而開發的，Git 已經是現在程式設計師不可或缺的技能。 為什麼需要 Git 版本控制最簡單的辦法就是，每次都備份成一個資料夾： 上面的方法是最簡單也是最智障的辦法，聽說到現在還是很多人在這樣管理程式碼。這樣管理程式碼的好處是簡單易用，而且不需要腦子，也不需要安裝任何東西，所以人…","frontmatter":{"title":"Git","date":"2021-06-06T19:31:04.000Z","draft":true,"tags":["git","linux"],"image":null,"description":null}}}]}},"pageContext":{"id":"ffcb87cf-580e-5b8c-8531-c6678e682abe"}},"staticQueryHashes":[]}