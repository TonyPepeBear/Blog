{"componentChunkName":"component---src-templates-article-template-tsx","path":"/posts/docker/pwd-hosting","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"ef50281c-b92b-5cc4-9c42-2f5e4b971e4d","html":"<p>學過 Docker 的人都應該有用過 Docker Playground 來學習或是測試過軟體，不想在本機跑 Docker 可以先用 Docker Playground 試試看軟體可不可以跑。</p>\n<!--more-->\n<p>官方已經有架設 <a href=\"https://labs.play-with-docker.com/\">Docker Playground</a>，可以讓大家方便使用，但我使用的時後常發現他會 Lag，也不知道是 Docker Server 的問題，還是臺灣網路的問題。剛好最近想要教社團 Docker，這樣我架好一個，大家就不需要準備環境，直接就可以開始學了。</p>\n<p>本專案的 <a href=\"https://github.com/play-with-docker/play-with-docker\">GitHub</a></p>\n<h2>準備環境</h2>\n<ul>\n<li>\n<p>Docker <code class=\"language-text\">18.06.0+</code></p>\n</li>\n<li>\n<p>Go 最新版</p>\n</li>\n</ul>\n<p>以上的安裝兩個在這邊都不贅述，請自行參閱官方文檔。</p>\n<h2>開始部署</h2>\n<h3>第一步：下載專案</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/play-with-docker/play-with-docker\n<span class=\"token builtin class-name\">cd</span> play-with-docker</code></pre></div>\n<h3>第二步：確認驅動</h3>\n<p>其實我不是很確定這一步驟是要幹嘛，但是官方文檔有寫到，但是我在 Mac 上無法執行此命令，也可以順利部署。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> modprobe xt_ipvs</code></pre></div>\n<h3>第三步：Docker swarm</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> swarm init</code></pre></div>\n<h3>第四步：下載 image</h3>\n<p>這個 Image 是之後在 PWD 中創建容器時要用到的 Image。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> pull franela/dind</code></pre></div>\n<h3>第五步：go mod</h3>\n<p>這步也是非必要的，我也不懂 Golang 所以也不確定是要幹嘛。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">go mod vendor</code></pre></div>\n<h3>最後：啟動</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker-compose</span> up</code></pre></div>\n<p>若沒有其他問題，理論上現在連接到 <code class=\"language-text\">http://localhost:80</code> 就可以看到 PWD 正在執行，也可以開始創建容器使用。</p>\n<h2>localhost or 404</h2>\n<p>上一段的最後寫到可以連接到 localhost，但如果你試著用 localhost 以外的方式連接，就會出現問題，不管是 <code class=\"language-text\">127.0.0.1</code> 或是用網址 <code class=\"language-text\">pwd.example.com</code> 之類的都沒有辦法連接到 PWD，會不斷地出現 404，就是只有 localhost 可以。官方的文件就寫到這裡，也沒寫解法，以下是我自己發現的解決方法。</p>\n<p>基本上這個問題是 DNS 解析發生的問題，PWD 一次只能解析一種網址，預設是 <code class=\"language-text\">localhost</code>，我們可以去他的設定檔中變更他。</p>\n<p>設定檔案在 <code class=\"language-text\">play-with-docker/config/config.go</code> 之中，其中會有一行長下面的樣子：</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">flag<span class=\"token punctuation\">.</span><span class=\"token function\">StringVar</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>PlaygroundDomain<span class=\"token punctuation\">,</span> <span class=\"token string\">\"playground-domain\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Domain to use for the playground\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>可以看到 PWD 這裡可以設定要解析的網址就是 <code class=\"language-text\">localhost</code>，所以只要將此變更為 <code class=\"language-text\">pwd.example.com</code>，就可以用這個網址連上 PWD。</p>\n<h3>連上容器內的 Port</h3>\n<p>就算做完上面的設定，也順利了啟動 Docker 容器，但最後才發現想要連上特定的 Port 還是會失敗，因為他是用子網域的方式去連線 <code class=\"language-text\">http://ip&lt;hyphen-ip>-&lt;session_jd>-&lt;port>.direct.pwd.example.com</code>，所以又會遇到無法解析 DNS 的情況，我的解法是在 DNS 的設定中把 <code class=\"language-text\">pwd.example.com</code> 和 <code class=\"language-text\">*.pwd.example.com</code> 都加入 A Record，才順利連上。</p>\n<h2>Nginx Proxy Pass</h2>\n<p>這部分我研究了蠻久，如果要把 Server 隱藏在 Nginx 後面，要設定的東西比較複雜，因為 PWD 有使用到 WebSocket，但是這部分我沒有過多的心得，所以直接把我的 <code class=\"language-text\">conf</code> 放在下面，容我不做解釋了：</p>\n<div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token directive\"><span class=\"token keyword\">map</span> <span class=\"token variable\">$http_upgrade</span> <span class=\"token variable\">$connection_upgrade</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token directive\"><span class=\"token keyword\">default</span> upgrade</span><span class=\"token punctuation\">;</span>\n    ''      <span class=\"token directive\"><span class=\"token keyword\">close</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token directive\"><span class=\"token keyword\">listen</span>       <span class=\"token number\">80</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">server_name</span>  pwd.example.com *.pwd.example.com</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token directive\"><span class=\"token keyword\">location</span> /</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_pass</span> http://192.168.1.1:80</span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_set_header</span> Upgrade <span class=\"token variable\">$http_upgrade</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_set_header</span> Connection <span class=\"token variable\">$connection_upgrade</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_set_header</span> Host <span class=\"token variable\">$host</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">proxy_cache_bypass</span> <span class=\"token variable\">$http_upgrade</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token directive\"><span class=\"token keyword\">error_page</span>   <span class=\"token number\">500</span> <span class=\"token number\">502</span> <span class=\"token number\">503</span> <span class=\"token number\">504</span>  /50x.html</span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">location</span> = /50x.html</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token directive\"><span class=\"token keyword\">root</span>   /usr/share/nginx/html</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>上面是假設 PWD Server 跑在 <code class=\"language-text\">192.168.1.1:80</code> 上。</p>\n<h2>Reference</h2>\n<ul>\n<li><a href=\"https://github.com/play-with-docker/play-with-docker\">Play With Docker</a></li>\n</ul>","rawMarkdownBody":"\n學過 Docker 的人都應該有用過 Docker Playground 來學習或是測試過軟體，不想在本機跑 Docker 可以先用 Docker Playground 試試看軟體可不可以跑。\n\n<!--more-->\n\n官方已經有架設 [Docker Playground](https://labs.play-with-docker.com/)，可以讓大家方便使用，但我使用的時後常發現他會 Lag，也不知道是 Docker Server 的問題，還是臺灣網路的問題。剛好最近想要教社團 Docker，這樣我架好一個，大家就不需要準備環境，直接就可以開始學了。\n\n本專案的 [GitHub](https://github.com/play-with-docker/play-with-docker)\n\n## 準備環境\n\n- Docker `18.06.0+`\n\n- Go 最新版\n\n以上的安裝兩個在這邊都不贅述，請自行參閱官方文檔。\n\n## 開始部署\n\n### 第一步：下載專案\n\n```bash\ngit clone https://github.com/play-with-docker/play-with-docker\ncd play-with-docker\n```\n\n### 第二步：確認驅動\n\n其實我不是很確定這一步驟是要幹嘛，但是官方文檔有寫到，但是我在 Mac 上無法執行此命令，也可以順利部署。\n\n```bash\nsudo modprobe xt_ipvs\n```\n\n### 第三步：Docker swarm\n\n```bash\ndocker swarm init\n```\n\n### 第四步：下載 image\n\n這個 Image 是之後在 PWD 中創建容器時要用到的 Image。\n\n```bash\ndocker pull franela/dind\n```\n\n### 第五步：go mod\n\n這步也是非必要的，我也不懂 Golang 所以也不確定是要幹嘛。\n\n```bash\ngo mod vendor\n```\n\n### 最後：啟動\n\n```bash\ndocker-compose up\n```\n\n若沒有其他問題，理論上現在連接到 `http://localhost:80` 就可以看到 PWD 正在執行，也可以開始創建容器使用。\n\n## localhost or 404\n\n上一段的最後寫到可以連接到 localhost，但如果你試著用 localhost 以外的方式連接，就會出現問題，不管是 `127.0.0.1` 或是用網址 `pwd.example.com` 之類的都沒有辦法連接到 PWD，會不斷地出現 404，就是只有 localhost 可以。官方的文件就寫到這裡，也沒寫解法，以下是我自己發現的解決方法。\n\n基本上這個問題是 DNS 解析發生的問題，PWD 一次只能解析一種網址，預設是 `localhost`，我們可以去他的設定檔中變更他。\n\n設定檔案在 `play-with-docker/config/config.go` 之中，其中會有一行長下面的樣子：\n\n```go\nflag.StringVar(&PlaygroundDomain, \"playground-domain\", \"localhost\", \"Domain to use for the playground\")\n```\n\n可以看到 PWD 這裡可以設定要解析的網址就是 `localhost`，所以只要將此變更為 `pwd.example.com`，就可以用這個網址連上 PWD。\n\n### 連上容器內的 Port\n\n就算做完上面的設定，也順利了啟動 Docker 容器，但最後才發現想要連上特定的 Port 還是會失敗，因為他是用子網域的方式去連線 `http://ip<hyphen-ip>-<session_jd>-<port>.direct.pwd.example.com`，所以又會遇到無法解析 DNS 的情況，我的解法是在 DNS 的設定中把 `pwd.example.com` 和 `*.pwd.example.com` 都加入 A Record，才順利連上。\n\n## Nginx Proxy Pass\n\n這部分我研究了蠻久，如果要把 Server 隱藏在 Nginx 後面，要設定的東西比較複雜，因為 PWD 有使用到 WebSocket，但是這部分我沒有過多的心得，所以直接把我的 `conf` 放在下面，容我不做解釋了：\n\n```nginx\nmap $http_upgrade $connection_upgrade {\n    default upgrade;\n    ''      close;\n}\n\nserver {\n    listen       80;\n    server_name  pwd.example.com *.pwd.example.com;\n\n    location / {\n        proxy_pass http://192.168.1.1:80;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection $connection_upgrade;\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n}\n```\n\n上面是假設 PWD Server 跑在 `192.168.1.1:80` 上。\n\n## Reference\n\n- [Play With Docker](https://github.com/play-with-docker/play-with-docker)\n","excerpt":"學過 Docker 的人都應該有用過 Docker Playground 來學習或是測試過軟體，不想在本機跑 Docker 可以先用 Docker Playground 試試看軟體可不可以跑。 官方已經有架設 Docker Playground，可以讓大家方便使用，但我使用的時後常發現他會 Lag，也不知道是 Docker Server 的問題，還是臺灣網路的問題。剛好最近想要教社團 Docke…","frontmatter":{"title":"自架 Play With Docker","date":"2021-06-05T16:08:29.000Z","draft":false,"tags":["docker","play-with-docker","nginx"],"image":"https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/f6db1841-15c5-40fc-7174-8a5e73647700/public","description":"學過 Docker 的人都應該有用過 Docker Playground 來學習或是測試過軟體，不想在本機跑 Docker 可以先用 Docker Playground 試試看軟體可不可以跑。"}}}]}},"pageContext":{"id":"ef50281c-b92b-5cc4-9c42-2f5e4b971e4d"}},"staticQueryHashes":[]}