{"componentChunkName":"component---src-templates-article-template-tsx","path":"/posts/web/cloudflare-tunnel","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"0328ae6c-1fa1-50d8-aec1-a55575fe59b5","html":"<p>Cloudflare 真的是佛心公司，提供免費的 DNS、DDoS 防護，還可以拿來託管靜態網頁，而今天是介紹他們公司的 Tunnel，這個服務可以將本地電腦的特定 port 開放到網路上，而且完全免費，在台灣的速度也不慢，真的很佛，幾乎等於拿到免費的 IPv4。</p>\n<p>我覺得目前的缺點就是網路上相關的資料比較少，遇到問題很難找到資料參考，因為他其實主要是 Cloudflare 的一項零信任服務，目標客群都是一些厲害的網管，所以官方寫的文件也都很深奧，如果是新手可能會頭昏眼花。</p>\n<!--more-->\n<p>這一項服務可以先不用帳號就能試用，不過就不能自訂 Domain，我會先介紹免登入的，再介紹要登入的。第一步還是要在本地先安裝環境。</p>\n<h2>安裝 cloudflared</h2>\n<h3>全系統適用</h3>\n<p>注意 Cloudflare 後面多了一個 <code class=\"language-text\">d</code>，這是他連上 Tunnel 的必要程式，是用 Go 編寫，安裝方式就是到<a href=\"https://github.com/cloudflare/cloudflared/releases\">官方 Github</a>下載符合自己環境的執行檔。</p>\n<h3>macOS</h3>\n<p>mac 可以用 Homebrew 安裝：</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">brew install cloudflare/cloudflare/cloudflared</code></pre></div>\n<h3>Windows</h3>\n<p>Windows 永遠是最麻煩的，下載完執行檔後，隨便丟到一個資料夾，然後加到 PATH 裡。</p>\n<h3>Update</h3>\n<p>要更新這個執行檔，只要 Run 下面的指令，另外，Windows 不支援自動更新，要更新就只能手動下載覆蓋：</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">cloudflared update</code></pre></div>\n<h2>免登入測試 Tunnel</h2>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">cloudflared tunnel --url http://localhost:8080</code></pre></div>\n<p>執行上面的指令，就可以將本地電腦的 8080 port 用 http 公開到網路上，應該會看到輸出中會給一串個 <code class=\"language-text\">*-*-*.trycloudflare.com</code> 的網址，現在只要訪問那個網址，就可以發現本地的網頁已經可以從全網連到，不需註冊，也不用設定複雜的 Domain，還不限流量。</p>\n<h2>登入 Cloudflare</h2>\n<p>第一步就是先登入 Cloudflare 的帳號，也要有一個已經託管給 Cloudflare 的 Domain：</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">cloudflared tunnel login</code></pre></div>\n<p>執行這個命令後，應該會跳出瀏覽器授權，如果沒有跳出，就手動複製提供的授權網址登入 Cloudflare 帳號。</p>\n<h2>創建並使用 Tunnel</h2>\n<p>登入完成後就可以開始創建通道，創建只會在本地產生一些文件，並不會有任何連線的動作，可以放心執行：</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">cloudflared tunnel create &lt;Name&gt;</code></pre></div>\n<p>創建完成後，Cloudflare 會給一組 UUID，可以看一下有沒有創建成功：</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">cloudflared tunnel list</code></pre></div>\n<p>如果要刪除就是 Delete：</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">cloudflared tunnel delete &lt;Name or UUID&gt;</code></pre></div>\n<h2>DNS 設定</h2>\n<p>在創建 Tunnel 後，Cloudflare 會將剛剛創建隧道時產生的 UUID 綁定到 <code class=\"language-text\">&lt;UUID>.cfargotunnel.com</code> 這個 Domain，不過 Cloudflare 會擋掉用這個 Domain 直接連線的流量，所以我們要把我們的 Domain 新增一個 CNAME 紀錄，把流量往這邊導。</p>\n<p>有兩個方法可以設定 CNAME，一個是自己去 Cloudflare 的官網設定：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/TonyPepeBear/ImageBed@main/20210813165733.png\" alt=\"img\"></p>\n<p>另一個是直接用指令設定，快又方便，把後面的 domain 改成自己想要綁定的：</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">cloudflared tunnel route dns &lt;Name or UUID&gt; test.example.com</code></pre></div>\n<p>打完後如果不放心，還是可以自己到 Cloudflare 的 Dns 設定看一下有沒有設定完成，應該會看到跟上圖一樣產生一個 CNAME Record。</p>\n<h2>Tunnel Config</h2>\n<p>下面是最簡單的 Config 範例，這是一個 <code class=\"language-text\">yml</code> 檔案：</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">tunnel</span><span class=\"token punctuation\">:</span> &lt;Name<span class=\"token punctuation\">></span>\n\n<span class=\"token key atrule\">ingress</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hostname</span><span class=\"token punctuation\">:</span> test.example.com\n    <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8080</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span> http_status<span class=\"token punctuation\">:</span><span class=\"token number\">404</span></code></pre></div>\n<p>上面會把 8080 的 HTTP 流量導到 <code class=\"language-text\">domain.example.com</code>，使用剛剛創建的 Tunnel。</p>\n<p>最後一行一定要有一個可以接受所有流量的 Service，不然服務會不能啟動，這裡全部往 404 導。</p>\n<h2>Run Tunnel</h2>\n<p>最後一步，加上 config 的參數，把剛剛的 yml 檔喂給 Cloudflare，就可以啟動通道了：</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">cloudflared tunnel --config test.yml run</code></pre></div>\n<h2>後記</h2>\n<p>這篇只介紹了如何創建一個 Http 的 Tunnel，如果要開其他的 TCP Port，還需要其他的設定，而且在 Client 端也會需要安裝 Cloudflared，所以我留到下一篇在介紹。</p>\n<h2>Reference</h2>\n<ul>\n<li><a href=\"https://developers.cloudflare.com/cloudflare-one/\">Cloudflare for Teams documentation</a></li>\n</ul>","rawMarkdownBody":"\nCloudflare 真的是佛心公司，提供免費的 DNS、DDoS 防護，還可以拿來託管靜態網頁，而今天是介紹他們公司的 Tunnel，這個服務可以將本地電腦的特定 port 開放到網路上，而且完全免費，在台灣的速度也不慢，真的很佛，幾乎等於拿到免費的 IPv4。\n\n我覺得目前的缺點就是網路上相關的資料比較少，遇到問題很難找到資料參考，因為他其實主要是 Cloudflare 的一項零信任服務，目標客群都是一些厲害的網管，所以官方寫的文件也都很深奧，如果是新手可能會頭昏眼花。\n\n<!--more-->\n\n這一項服務可以先不用帳號就能試用，不過就不能自訂 Domain，我會先介紹免登入的，再介紹要登入的。第一步還是要在本地先安裝環境。\n\n## 安裝 cloudflared\n\n### 全系統適用\n\n注意 Cloudflare 後面多了一個 `d`，這是他連上 Tunnel 的必要程式，是用 Go 編寫，安裝方式就是到[官方 Github](https://github.com/cloudflare/cloudflared/releases)下載符合自己環境的執行檔。\n\n### macOS\n\nmac 可以用 Homebrew 安裝：\n\n```sh\nbrew install cloudflare/cloudflare/cloudflared\n```\n\n### Windows\n\nWindows 永遠是最麻煩的，下載完執行檔後，隨便丟到一個資料夾，然後加到 PATH 裡。\n\n### Update\n\n要更新這個執行檔，只要 Run 下面的指令，另外，Windows 不支援自動更新，要更新就只能手動下載覆蓋：\n\n```sh\ncloudflared update\n```\n\n## 免登入測試 Tunnel\n\n```sh\ncloudflared tunnel --url http://localhost:8080\n```\n\n執行上面的指令，就可以將本地電腦的 8080 port 用 http 公開到網路上，應該會看到輸出中會給一串個 `*-*-*.trycloudflare.com` 的網址，現在只要訪問那個網址，就可以發現本地的網頁已經可以從全網連到，不需註冊，也不用設定複雜的 Domain，還不限流量。\n\n## 登入 Cloudflare\n\n第一步就是先登入 Cloudflare 的帳號，也要有一個已經託管給 Cloudflare 的 Domain：\n\n```sh\ncloudflared tunnel login\n```\n\n執行這個命令後，應該會跳出瀏覽器授權，如果沒有跳出，就手動複製提供的授權網址登入 Cloudflare 帳號。\n\n## 創建並使用 Tunnel\n\n登入完成後就可以開始創建通道，創建只會在本地產生一些文件，並不會有任何連線的動作，可以放心執行：\n\n```sh\ncloudflared tunnel create <Name>\n```\n\n創建完成後，Cloudflare 會給一組 UUID，可以看一下有沒有創建成功：\n\n```sh\ncloudflared tunnel list\n```\n\n如果要刪除就是 Delete：\n\n```sh\ncloudflared tunnel delete <Name or UUID>\n```\n\n## DNS 設定\n\n在創建 Tunnel 後，Cloudflare 會將剛剛創建隧道時產生的 UUID 綁定到 `<UUID>.cfargotunnel.com` 這個 Domain，不過 Cloudflare 會擋掉用這個 Domain 直接連線的流量，所以我們要把我們的 Domain 新增一個 CNAME 紀錄，把流量往這邊導。\n\n有兩個方法可以設定 CNAME，一個是自己去 Cloudflare 的官網設定：\n\n![img](https://cdn.jsdelivr.net/gh/TonyPepeBear/ImageBed@main/20210813165733.png)\n\n另一個是直接用指令設定，快又方便，把後面的 domain 改成自己想要綁定的：\n\n```sh\ncloudflared tunnel route dns <Name or UUID> test.example.com\n```\n\n打完後如果不放心，還是可以自己到 Cloudflare 的 Dns 設定看一下有沒有設定完成，應該會看到跟上圖一樣產生一個 CNAME Record。\n\n## Tunnel Config\n\n下面是最簡單的 Config 範例，這是一個 `yml` 檔案：\n\n```yml\ntunnel: <Name>\n\ningress:\n  - hostname: test.example.com\n    service: http://localhost:8080\n  - service: http_status:404\n```\n\n上面會把 8080 的 HTTP 流量導到 `domain.example.com`，使用剛剛創建的 Tunnel。\n\n最後一行一定要有一個可以接受所有流量的 Service，不然服務會不能啟動，這裡全部往 404 導。\n\n## Run Tunnel\n\n最後一步，加上 config 的參數，把剛剛的 yml 檔喂給 Cloudflare，就可以啟動通道了：\n\n```sh\ncloudflared tunnel --config test.yml run\n```\n\n## 後記\n\n這篇只介紹了如何創建一個 Http 的 Tunnel，如果要開其他的 TCP Port，還需要其他的設定，而且在 Client 端也會需要安裝 Cloudflared，所以我留到下一篇在介紹。\n\n## Reference\n\n- [Cloudflare for Teams documentation](https://developers.cloudflare.com/cloudflare-one/)\n","excerpt":"Cloudflare 真的是佛心公司，提供免費的 DNS、DDoS 防護，還可以拿來託管靜態網頁，而今天是介紹他們公司的 Tunnel，這個服務可以將本地電腦的特定 port 開放到網路上，而且完全免費，在台灣的速度也不慢，真的很佛，幾乎等於拿到免費的 IPv4。 我覺得目前的缺點就是網路上相關的資料比較少，遇到問題很難找到資料參考，因為他其實主要是 Cloudflare 的一項零信任服務，目標…","frontmatter":{"title":"Cloudflare Tunnel","date":"2021-08-13T07:17:39.000Z","draft":false,"tags":["cloudflare","tunnel","teams","cloudflare-tunnel"],"image":"https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/00e85cf1-4c03-45ea-004c-f61e6216d400/public","description":"Cloudflare 真的是佛心公司，提供免費的 DNS、DDoS 防護，還可以拿來託管靜態網頁，而今天是介紹他們公司的 Tunnel，這個服務可以將本地電腦的特定 port 開放到網路上，而且完全免費，在台灣的速度也不慢，真的很佛，幾乎等於拿到免費的 IPv4。"}}}]}},"pageContext":{"id":"0328ae6c-1fa1-50d8-aec1-a55575fe59b5"}},"staticQueryHashes":[]}