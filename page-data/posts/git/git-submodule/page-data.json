{"componentChunkName":"component---src-templates-article-template-tsx","path":"/posts/git/git-submodule","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"6dfbcd33-6cab-568b-bbc2-51c9dec4a230","html":"<p>要在一個 Git 專案中有子專案 (我都叫他 git in git)，有兩個辦法，一個是直接 clone 到目錄下，另一個就是使用 submodule。兩者的不同是前者的子專案會在母專案中佔掉所有的空間，而後者只會紀錄 submodule 的路徑和 commit 版本。</p>\n<!--more-->\n<h2>Add Submodule</h2>\n<p>要將專案新增到現有的目錄中，可以使用 <code class=\"language-text\">git submodule add</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> submodule <span class=\"token function\">add</span> <span class=\"token operator\">&lt;</span>repo_url<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>folder<span class=\"token operator\">></span></code></pre></div>\n<p>執行後，可以看到 git 會自動幫你把 submodule clone 到指定的目錄中，並多了一個檔案 <code class=\"language-text\">.gitmodules</code>，這個檔案就是上面說到的 Submodule 只紀錄 commit 版本，和 Submodule URL 的檔案。</p>\n<p>add submodule 後，還是要 commit，因為 Submodule 也就只是紀錄要用子專案的哪一個 commit 版本，所以也可以確保大家都是使用到同一個 Submodule 的版本。可以試著將專案 commit and push 到 GitHub 上，應該可以看到 Submodule 就是連結到另外一個專案的某一個 commit，下面是本站的 Hugo 主題的 submodule：</p>\n<p><img src=\"https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/c4ba8819-787e-4726-fb58-db317f9ed400/public\" alt=\"image\"></p>\n<h2>Clone Submodule</h2>\n<p>在 Clone 含有 Submodule 的專案時，Git 預設是不會自動 clone 子專案的，需要加上 <code class=\"language-text\">--recursive</code> 這個參數，才會自動把 Submodule 也 Clone 下來。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> clone --recursive <span class=\"token operator\">&lt;</span>repo_url<span class=\"token operator\">></span></code></pre></div>\n<p>如果 Clone 下來後才發現有 Submodule，可以用下面的方式補救，把子專案都 Clone 下來：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> submodule init\n<span class=\"token function\">git</span> submodule update --recursive</code></pre></div>","rawMarkdownBody":"\n要在一個 Git 專案中有子專案 (我都叫他 git in git)，有兩個辦法，一個是直接 clone 到目錄下，另一個就是使用 submodule。兩者的不同是前者的子專案會在母專案中佔掉所有的空間，而後者只會紀錄 submodule 的路徑和 commit 版本。\n\n<!--more-->\n\n## Add Submodule\n\n要將專案新增到現有的目錄中，可以使用 `git submodule add`：\n\n```shell\ngit submodule add <repo_url> <folder>\n```\n\n執行後，可以看到 git 會自動幫你把 submodule clone 到指定的目錄中，並多了一個檔案 `.gitmodules`，這個檔案就是上面說到的 Submodule 只紀錄 commit 版本，和 Submodule URL 的檔案。\n\nadd submodule 後，還是要 commit，因為 Submodule 也就只是紀錄要用子專案的哪一個 commit 版本，所以也可以確保大家都是使用到同一個 Submodule 的版本。可以試著將專案 commit and push 到 GitHub 上，應該可以看到 Submodule 就是連結到另外一個專案的某一個 commit，下面是本站的 Hugo 主題的 submodule：\n\n![image](https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/c4ba8819-787e-4726-fb58-db317f9ed400/public)\n\n## Clone Submodule\n\n在 Clone 含有 Submodule 的專案時，Git 預設是不會自動 clone 子專案的，需要加上 `--recursive` 這個參數，才會自動把 Submodule 也 Clone 下來。\n\n```shell\ngit clone --recursive <repo_url>\n```\n\n如果 Clone 下來後才發現有 Submodule，可以用下面的方式補救，把子專案都 Clone 下來：\n\n```shell\ngit submodule init\ngit submodule update --recursive\n```\n","excerpt":"要在一個 Git 專案中有子專案 (我都叫他 git in git)，有兩個辦法，一個是直接 clone 到目錄下，另一個就是使用 submodule。兩者的不同是前者的子專案會在母專案中佔掉所有的空間，而後者只會紀錄 submodule 的路徑和 commit 版本。 Add Submodule 要將專案新增到現有的目錄中，可以使用 ： 執行後，可以看到 git 會自動幫你把 submodul…","frontmatter":{"title":"Git Submodule","date":"2021-09-14T05:11:27.000Z","draft":false,"tags":["git","submodule","linux"],"image":"https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/6c29c4ca-3fc9-49b2-3109-0876c7492400/public","description":"要在一個 Git 專案中有子專案 (我稱為 git in git)，有兩個辦法，一個是直接 clone 到目錄下，另一個就是使用 submodule。兩者的不同是前者的子專案會在母專案中佔掉所有的空間，而後者只會紀錄"}}}]}},"pageContext":{"id":"6dfbcd33-6cab-568b-bbc2-51c9dec4a230"}},"staticQueryHashes":[]}