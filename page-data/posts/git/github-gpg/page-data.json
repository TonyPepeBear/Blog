{"componentChunkName":"component---src-templates-article-template-tsx","path":"/posts/git/github-gpg","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"7b973cf6-5326-5662-bf79-68448a9501f6","html":"<p>最近常常會看到別入 GitHub 上的 Commit 會有 Verified 的字樣，查了才知道這是為了防止有人盜用你的 email 簽 commit，畢竟 git 的 user.email 是可以自己隨便設的，所以 GitHub 就提供一個可以用公私鑰的方式來確認身份。</p>\n<p><img src=\"https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/6e429f76-94c1-46ff-77da-7d50a886d100/public\" alt=\"img\"></p>\n<!--more-->\n<h2>GnuPG</h2>\n<p>我們要利用 GnuPG 來產生金鑰和簽署 Commit，當然要先安裝他，可以自己查一下自己的 OS 要怎麼裝：</p>\n<p><a href=\"https://www.gnupg.org/download\">Download GnuPG</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install gnupg     # macOS\nchoco install gnupg    # Windows\napt install gnupg      # Ubuntu</code></pre></div>\n<h2>產生 GPG Key</h2>\n<p>用下面的一行指令就會進到互動式的畫面，接下來需要輸入一些資料：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">gpg --full-generate-key</code></pre></div>\n<ol>\n<li>產生 Rsa and Rsa</li>\n<li>GitHub 建議使用 4096，最複雜的就對了</li>\n<li>金鑰要不要過期可以自己評估，我是選不過期</li>\n<li>確認資料輸入正確</li>\n</ol>\n<p><img src=\"https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/d6411985-0b33-4ab2-e883-f95ce0da3c00/public\" alt=\"img\"></p>\n<ol>\n<li>輸入要簽署的名字</li>\n<li>輸入要簽署的 email，注意必須與 GitHub Email 和 <code class=\"language-text\">git config user.email</code> 的一樣。</li>\n<li>註釋隨便輸入即可</li>\n<li>確認資料輸入正確</li>\n</ol>\n<p><img src=\"https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/594a269c-ab4f-4484-fa9a-c74307454600/public\" alt=\"img\"></p>\n<p>接下來會跳出一個要輸入密碼的畫面，一樣依自己需求設定即可</p>\n<p><img src=\"https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/6b11a19b-c7fa-4697-0861-5fb4c66ff800/public\" alt=\"img\"></p>\n<p><img src=\"https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/56a8fc50-5a1e-4a0e-e9ef-30b9fe74fc00/public\" alt=\"img\"></p>\n<p>這樣就產生成功了，可以記一下這個畫面出現的資料</p>\n<p>如果要顯示所有的 Key：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">gpg --list-secret-keys</code></pre></div>\n<h2>複製 GPG Key 到 GitHub</h2>\n<p>用各個指令來顯示公鑰，並且複製到 GitHub 上，包含 Begin 和 End 兩行：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">gpg --armor --export <span class=\"token operator\">&lt;</span>Your Key<span class=\"token operator\">></span></code></pre></div>\n<p>進到設定裡，新增 GPG Key，貼上剛剛複製下的金鑰</p>\n<p><img src=\"https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/8a75edb9-4a08-4060-608a-d63353a77c00/public\" alt=\"img\"></p>\n<p><img src=\"https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/9c5ad211-0bcc-4058-a304-6903e69c8700/public\" alt=\"img\"></p>\n<p><img src=\"https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/0ef8e55b-7f1b-43ab-cd40-43303b98bc00/public\" alt=\"img\"></p>\n<p><img src=\"https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/32e1e3a5-2fdc-4e6d-aef3-08122d448d00/public\" alt=\"img\"></p>\n<h2>簽署 Commit</h2>\n<p>要簽署 Commit 我們需要先告訴 git 我們要用哪支鑰匙，也是用 git config 設定，如果要每個倉庫都用這支鑰匙，可以直接設定 global：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> config user.signingkey <span class=\"token operator\">&lt;</span>Your Key<span class=\"token operator\">></span>\n<span class=\"token function\">git</span> config --global user.signingkey <span class=\"token operator\">&lt;</span>Your Key<span class=\"token operator\">></span></code></pre></div>\n<p>設定好後，我們就可以開始簽 Commit，基本上就是在 Commit 時加上 <code class=\"language-text\">-S</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> commit -S -m <span class=\"token string\">\"Commit Message\"</span></code></pre></div>\n<p>如果覺得每次都要加上參數很麻煩，也可以直接加到 config 中，讓每次 Commit 都預設簽署：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> config commit.gpgsign <span class=\"token boolean\">true</span>\n<span class=\"token function\">git</span> config --global commit.gpgsign <span class=\"token boolean\">true</span></code></pre></div>\n<p>接下來，只要 push 到 GitHub 上，就會看到有 Verified 的標籤：</p>\n<p><img src=\"https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/6e429f76-94c1-46ff-77da-7d50a886d100/public\" alt=\"img\"></p>\n<h2>Reference</h2>\n<ul>\n<li><a href=\"https://docs.github.com/en/authentication/managing-commit-signature-verification/generating-a-new-gpg-key\">Generating a new GPG key</a></li>\n<li><a href=\"https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-new-gpg-key-to-your-github-account\">Adding a new GPG key to your GitHub account</a></li>\n<li><a href=\"https://www.gnupg.org/\">GnuPG</a></li>\n</ul>","rawMarkdownBody":"\n最近常常會看到別入 GitHub 上的 Commit 會有 Verified 的字樣，查了才知道這是為了防止有人盜用你的 email 簽 commit，畢竟 git 的 user.email 是可以自己隨便設的，所以 GitHub 就提供一個可以用公私鑰的方式來確認身份。\n\n![img](https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/6e429f76-94c1-46ff-77da-7d50a886d100/public)\n\n<!--more-->\n\n## GnuPG\n\n我們要利用 GnuPG 來產生金鑰和簽署 Commit，當然要先安裝他，可以自己查一下自己的 OS 要怎麼裝：\n\n[Download GnuPG](https://www.gnupg.org/download)\n\n```text\nbrew install gnupg     # macOS\nchoco install gnupg    # Windows\napt install gnupg      # Ubuntu\n```\n\n## 產生 GPG Key\n\n用下面的一行指令就會進到互動式的畫面，接下來需要輸入一些資料：\n\n```shell\ngpg --full-generate-key\n```\n\n1. 產生 Rsa and Rsa\n2. GitHub 建議使用 4096，最複雜的就對了\n3. 金鑰要不要過期可以自己評估，我是選不過期\n4. 確認資料輸入正確\n\n![img](https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/d6411985-0b33-4ab2-e883-f95ce0da3c00/public)\n\n1. 輸入要簽署的名字\n2. 輸入要簽署的 email，注意必須與 GitHub Email 和 `git config user.email` 的一樣。\n3. 註釋隨便輸入即可\n4. 確認資料輸入正確\n\n![img](https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/594a269c-ab4f-4484-fa9a-c74307454600/public)\n\n接下來會跳出一個要輸入密碼的畫面，一樣依自己需求設定即可\n\n![img](https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/6b11a19b-c7fa-4697-0861-5fb4c66ff800/public)\n\n![img](https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/56a8fc50-5a1e-4a0e-e9ef-30b9fe74fc00/public)\n\n這樣就產生成功了，可以記一下這個畫面出現的資料\n\n如果要顯示所有的 Key：\n\n```shell\ngpg --list-secret-keys\n```\n\n## 複製 GPG Key 到 GitHub\n\n用各個指令來顯示公鑰，並且複製到 GitHub 上，包含 Begin 和 End 兩行：\n\n```shell\ngpg --armor --export <Your Key>\n```\n\n進到設定裡，新增 GPG Key，貼上剛剛複製下的金鑰\n\n![img](https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/8a75edb9-4a08-4060-608a-d63353a77c00/public)\n\n![img](https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/9c5ad211-0bcc-4058-a304-6903e69c8700/public)\n\n![img](https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/0ef8e55b-7f1b-43ab-cd40-43303b98bc00/public)\n\n![img](https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/32e1e3a5-2fdc-4e6d-aef3-08122d448d00/public)\n\n## 簽署 Commit\n\n要簽署 Commit 我們需要先告訴 git 我們要用哪支鑰匙，也是用 git config 設定，如果要每個倉庫都用這支鑰匙，可以直接設定 global：\n\n```shell\ngit config user.signingkey <Your Key>\ngit config --global user.signingkey <Your Key>\n```\n\n設定好後，我們就可以開始簽 Commit，基本上就是在 Commit 時加上 `-S`：\n\n```shell\ngit commit -S -m \"Commit Message\"\n```\n\n如果覺得每次都要加上參數很麻煩，也可以直接加到 config 中，讓每次 Commit 都預設簽署：\n\n```shell\ngit config commit.gpgsign true\ngit config --global commit.gpgsign true\n```\n\n接下來，只要 push 到 GitHub 上，就會看到有 Verified 的標籤：\n\n![img](https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/6e429f76-94c1-46ff-77da-7d50a886d100/public)\n\n## Reference\n\n- [Generating a new GPG key](https://docs.github.com/en/authentication/managing-commit-signature-verification/generating-a-new-gpg-key)\n- [Adding a new GPG key to your GitHub account](https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-new-gpg-key-to-your-github-account)\n- [GnuPG](https://www.gnupg.org/)\n","excerpt":"最近常常會看到別入 GitHub 上的 Commit 會有 Verified 的字樣，查了才知道這是為了防止有人盜用你的 email 簽 commit，畢竟 git 的 user.email 是可以自己隨便設的，所以 GitHub 就提供一個可以用公私鑰的方式來確認身份。 img GnuPG 我們要利用 GnuPG 來產生金鑰和簽署 Commit，當然要先安裝他，可以自己查一下自己的 OS 要怎…","frontmatter":{"title":"GitHub GPG - Verified Commit","date":"2022-03-24T14:32:19.000Z","draft":false,"tags":["git","github","gpg","verified","commit"],"image":"https://imagedelivery.net/cdkaXPuFls5qlrh3GM4hfA/eb2adedc-6625-46d1-73ea-07c01fc92000/public","description":"最近常常會看到別入 GitHub 上的 Commit 會有 Verified 的字樣，查了才知道這是為了防止有人盜用你的 email 簽 commit，畢竟 git 的 user.email 是可以自己隨便設的，所以 GitHub 就提供一個可以用公私鑰的方式來確認身份。"}}}]}},"pageContext":{"id":"7b973cf6-5326-5662-bf79-68448a9501f6"}},"staticQueryHashes":[]}